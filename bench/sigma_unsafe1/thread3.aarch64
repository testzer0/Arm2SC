////
// 4 threads
// thread 0,1 -> worker threads
// thread 2 -> checking thread
// thread 3 -> signalling thread
// array[2]: an array of ints, addresses 0 and 1
// index: current index, address 2
// signal[3]: an array of bools, addresses 3 through 5
// wrong: set if checker finds a mistake, address 6
//

// wait until signalled
	MOV R1,#5 						;
wait:
	LDR R0,[R1]						;
	CBZ R0,wait 					;

	DMB SY 							;

// ok, all threads are done
// check whether array[0]+array[1] == 2
	MOV R2,#0 						;
	LDR R0,[R2]						;
	MOV R2,#1 						;
	LDR R1,[R2]						;
	ADD R0,R0,R1 					;
	CMP R0,#2 						;
	B.EQ correct 					;

	DMB SY 							;

// the sum is wrong
	MOV R0,#1 						;
	MOV R1,#6 						;
	STR R0,[R1]						;

correct:
// done